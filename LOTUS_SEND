create or replace procedure LOTUS_SEND (theme in varchar2, address in varchar2, text_msg in varchar2)
AS
  final_text varchar2(1000) := convert(text_msg,'CL8MSWIN1251');
  mass_address varchar_array := pk_array_id.str2_varchartbl(address);
  mail_connect UTL_SMTP.CONNECTION;
  count_concidence number;
  
  PROCEDURE send_header(name IN VARCHAR2, header IN VARCHAR2) AS
  BEGIN
    UTL_SMTP.WRITE_DATA(mail_connect, name || ': ' || header || UTL_TCP.CRLF);
  END send_header;
 
 --перекодируем тему письма
 FUNCTION encode_theme(subject_str IN VARCHAR2) RETURN VARCHAR2 
  AS
    str_for_parse VARCHAR2(1000) := subject_str;
    symbol VARCHAR2(1);  
    final_str VARCHAR2(2000);
  BEGIN
    FOR i in 1 .. length(str_for_parse)
    LOOP
      symbol := substr(str_for_parse,i,1);
      final_str := final_str  || '=?UTF-8?B?' || UTL_RAW.cast_to_varchar2(UTL_ENCODE.base64_encode(UTL_RAW.cast_to_raw(CONVERT(symbol, 'utf8')))) || '?=';
    END LOOP;    
    RETURN final_str;
  END encode_theme;    
  
  
  FUNCTION MIMEHEADER_ENCODE(i_STRING VARCHAR2)  RETURN VARCHAR2
    IS      
    BEGIN
      RETURN '=?utf8?B?' || 
      utl_raw.cast_to_varchar2
      (
            utl_encode.base64_encode                        
                  (
                          utl_raw.cast_to_raw( convert(i_STRING, 'utf8') )
                  )
      )
      ||'?=';
  END;
  
BEGIN
  
  select count(id) into count_concidence from lotus_msg_send -- проверяем отправлялось ли сообщение -19 отбрасывает время
  where substr(msg_text,1,length(msg_text)-19) = substr(text_msg,1,length(text_msg)-19);
  
  if count_concidence > 0 then
    null;
  else 
    mail_connect := UTL_SMTP.OPEN_CONNECTION('lotus.bank.srv', 25);
    
    UTL_SMTP.HELO(mail_connect, 'lotus.bank.srv');
    UTL_SMTP.MAIL(mail_connect, 'orcl@bank');
    for addr in mass_address.first .. mass_address.last
    loop  
        UTL_SMTP.RCPT(mail_connect, mass_address(addr));
    end loop;
      
    UTL_SMTP.OPEN_DATA(mail_connect);
      send_header('From', 'OracleServer');
      send_header('To', 'PlansDepartment');
      send_header('Subject', encode_theme(theme));
      UTL_SMTP.WRITE_RAW_DATA(mail_connect, utl_raw.cast_to_raw(final_text)); 
    
    UTL_SMTP.CLOSE_DATA(mail_connect);
    --UTL_SMTP.close_connection(mail_connect);
    UTL_SMTP.QUIT(mail_connect);
    
    --добавляем отправленное сообщение в таблицу
    insert into lotus_msg_send (msg_text, msg_date, msg_addr) values (text_msg, sysdate, address);
    commit;
    
  end if;
    EXCEPTION
      WHEN utl_smtp.transient_error OR utl_smtp.permanent_error THEN
        BEGIN
          UTL_SMTP.CLOSE_DATA(mail_connect);
          --UTL_SMTP.close_connection(mail_connect);
          UTL_SMTP.QUIT(mail_connect);
        EXCEPTION
          WHEN UTL_SMTP.TRANSIENT_ERROR OR UTL_SMTP.PERMANENT_ERROR THEN
            NULL; -- Если SMTP сервер недоступен, соединение с сервером отсутствует.
                  -- Вызов QUIT приводит к ошибке. Обработка исключения позволяет
                  -- игнорировать эту ошибку.
        END;
  raise_application_error(-20000, 'Failed to send mail due to the following error: ' || sqlerrm);
  
END LOTUS_SEND;
